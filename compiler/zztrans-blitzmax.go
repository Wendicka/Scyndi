package scynt


//import "fmt"

func init(){
	
	
	
	
	TransMod["BlitzMax"] = &T_TransMod {}
	tmw:=TransMod["BlitzMax"]

	tmw.TransVars = func(src *tsource) string{

		ret:="\n\n' Global Variables\n"
		for vname,vdata:=range src.identifiers {
			if vdata.idtype=="VAR" {
				if src.orilinerem { ret += "\t\t' VAR "+vname+"\n"}
				ret += "Global "+vdata.translateto
				switch vdata.dttype {
					case "STRING":  ret +=":String"
					case "INTEGER": ret +=":Long"
					case "BOOLEAN": ret +=":Byte"
					case "FLOAT":   ret +=":Double"
					default:        throw("Alternate types are not yet supported for BlitzMax translation. Please come back later!")
				}
				ret += " = "
				if vdata.defstring { ret += "\""+vdata.defaultvalue+"\"\n" } else { ret+=vdata.defaultvalue+"\n" }
			}
		}
		
		return ret
	}
	
	tmw.Merge = func(b map[string]string) string {
		ret:="' Code generated by Scyndi\n\nStrict\n"
		ret+=b["VAR"]+"\n\n"
		
		return ret
	}
}
